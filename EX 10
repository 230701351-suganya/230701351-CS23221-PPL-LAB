NAME SUGANYA.S 
REG.NO:230701351
SEARCHING TECHNIQUES:LINEAR AND BINARY
1.
def mergeSort(arr) -> list:
    if len(arr) <= 1: return arr

    mid = len(arr) // 2
    left, right = arr[:mid], arr[mid:]

    return merge(mergeSort(left), mergeSort(right))

def merge(left, right) -> list:
    result = []
    i = j = 0

    while i < len(left) and j < len(right):
        if left[i] < right[j]: result.append(left[i]); i += 1;
        else: result.append(right[j]); j += 1;

    while i < len(left): result.append(left[i]); i += 1;

    while j < len(right): result.append(right[j]); j += 1;

    return result

input()
print(*mergeSort([int(i) for i in input().split()]))

2.
n=int(input())
l = [int(i) for i in input().split()]
if l[0] > l[1]:
    print(l[0],end=" ")
for i in range(1,n-2):
    if l[i]>l[i-1] and l[i]>l[i+1]:
        print(l[i],end=" ")
if l[-1]>l[-2]:
    print(l[-1])

3.
n = int(input())
l = list(map(int,input().split()))
p = int(input())

found = False

for i in range(n):
    for j in range(1, n):
        if l[i] + l[j] == p:
            print("Yes")
            found = True
            break
    if found:
        break
else:
    print("No")
4.
lst=list(map(int,input().split(',')))
s=int(input())
def binary(l,k):
    flag=0
    low=0
    high=len(lst)
    while low<=high:
        m=low+(high-low)//2
        if k==l[m]:
            return "True"
        elif k>l[m]:
            low=m+1
        else:
            high=m-1
    return "False"
print(binary(sorted(lst),s))
5.
def bubbleSort(arr):
    count=0
    n = len(arr)
    for i in range(n-1):
        for j in range(0, n-i-1):
            if arr[j] > arr[j + 1]:
                count+=1
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return count
n=int(input())
s=list(map(int,input().split()))
print("List is sorted in",bubbleSort(s),"swaps.")
print("First Element:",s[0])
print("Last Element:",s[-1])
